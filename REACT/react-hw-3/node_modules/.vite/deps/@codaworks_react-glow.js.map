{
  "version": 3,
  "sources": ["../../@codaworks/react-glow/src/index.tsx", "../../@codaworks/react-glow/dist/index.js"],
  "sourcesContent": ["import React, { CSSProperties, useEffect, useRef } from 'react'\r\nimport { GlowCaptureProps, GlowProps } from './index.types'\r\n\r\nexport const GlowCapture = (props: GlowCaptureProps) => {\r\n    const {\r\n        className = '',\r\n        size = 400,\r\n        ...rest\r\n    } = props\r\n\r\n    const element = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n        const move = (e: PointerEvent) => {\r\n            if (e.pointerType === 'mouse') {\r\n                requestAnimationFrame(() => {\r\n                    if (!element.current)\r\n                        return\r\n\r\n                    const bounds = element.current.getBoundingClientRect()\r\n\r\n                    const x = e.clientX - bounds.left\r\n                    const y = e.clientY - bounds.top\r\n\r\n                    element.current.style.setProperty('--glow-x', `${x}px`)\r\n                    element.current.style.setProperty('--glow-y', `${y}px`)\r\n                })\r\n            }\r\n        }\r\n\r\n        const leave = () => {\r\n            element.current?.style.removeProperty('--glow-x')\r\n            element.current?.style.removeProperty('--glow-y')\r\n        }\r\n\r\n        element.current?.addEventListener('pointermove', move, { passive: true })\r\n        element.current?.addEventListener('pointerleave', leave, { passive: true })\r\n        return () => {\r\n            element.current?.removeEventListener('pointermove', move)\r\n            element.current?.removeEventListener('pointerleave', leave)\r\n        }\r\n    }, [])\r\n\r\n    return <div ref={element}\r\n        className={`glow-capture ${className}`}\r\n        style={{\r\n            position: 'relative',\r\n            '--glow-size': `${size}px`\r\n        } as CSSProperties}\r\n        {...rest} />\r\n}\r\n\r\n\r\nconst mask = `\r\nradial-gradient(var(--glow-size) var(--glow-size) at calc(var(--glow-x, -99999px) - var(--glow-left, 0px))\r\ncalc(var(--glow-y, -99999px) - var(--glow-top, 0px)), #000000 1%, transparent 50%)\r\n`\r\n\r\n\r\nexport const Glow = (props: GlowProps) => {\r\n\r\n    const {\r\n        className = '',\r\n        style,\r\n        children,\r\n        color = '#f50057',\r\n        debug = false,\r\n        ...rest\r\n    } = props\r\n\r\n\r\n    const element = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n        element.current?.style.setProperty('--glow-top', `${element.current?.offsetTop}px`)\r\n        element.current?.style.setProperty('--glow-left', `${element.current?.offsetLeft}px`)\r\n    })\r\n\r\n    useEffect(() => {\r\n        const observer = new ResizeObserver(() => {\r\n            requestAnimationFrame(() => {\r\n                element.current?.style.setProperty('--glow-top', `${element.current?.offsetTop}px`)\r\n                element.current?.style.setProperty('--glow-left', `${element.current?.offsetLeft}px`)\r\n            })\r\n        })\r\n\r\n        const capture = element.current?.closest('.glow-capture')\r\n        if (capture)\r\n            observer.observe(capture)\r\n\r\n\r\n        return () => observer.disconnect()\r\n    }, [])\r\n\r\n    return <div ref={element} className='glow' style={{ display: 'grid' }}>\r\n        <div className={className}\r\n            style={{\r\n                ...style,\r\n                gridArea: '1/1/1/1'\r\n            }}\r\n            {...rest}>\r\n            {children}\r\n        </div>\r\n        <div className={`glow-mask ${className}`}\r\n            // @ts-ignore\r\n            glow='true'\r\n            style={{\r\n                ...style,\r\n                '--glow-color': color,\r\n                gridArea: '1/1/1/1',\r\n                pointerEvents: 'none',\r\n                mask: debug ? undefined : mask,\r\n                WebkitMask: debug ? undefined : mask\r\n            } as CSSProperties}\r\n            {...rest}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n}\r\n", "\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./react-glow.cjs.production.min.js')\n} else {\n  module.exports = require('./react-glow.cjs.development.js')\n}\n"],
  "mappings": "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",
  "names": ["GlowCapture", "props", "_props$className", "className", "_props$size", "size", "rest", "_objectWithoutPropertiesLoose", "_excluded", "element", "useRef", "useEffect", "move", "e", "pointerType", "requestAnimationFrame", "current", "bounds", "getBoundingClientRect", "x", "clientX", "left", "y", "clientY", "top", "style", "setProperty", "leave", "_element$current", "removeProperty", "_element$current2", "_element$current3", "addEventListener", "passive", "_element$current4", "_element$current5", "removeEventListener", "_element$current6", "React", "ref", "position", "mask", "Glow", "_props$className2", "children", "_props$color", "color", "_props$debug", "debug", "_excluded2", "_element$current7", "_element$current8", "offsetTop", "_element$current9", "_element$current10", "offsetLeft", "observer", "ResizeObserver", "_element$current11", "_element$current12", "_element$current13", "_element$current14", "capture", "_element$current15", "closest", "observe", "disconnect", "display", "_extends", "gridArea", "glow", "pointerEvents", "undefined", "WebkitMask"]
}
